{
  "name": "fh-webapp",
  "version": "0.6.7",
  "description": "FeedHenry REST API routes",
  "main": "lib/webapp.js",
  "scripts": {
    "test": "listing=$(ls -1 test/test_*); teststorun=$(echo $listing | tr -d '\n'); whiskey --tests \"$teststorun\" --global-setup-teardown \"test/setup.js\""
  },
  "author": {
    "name": "FeedHenry"
  },
  "dependencies": {
    "fh-connect": "1.8.6",
    "fh-reportingclient": "*",
    "underscore": "1.5.1",
    "fh-api": "*",
    "request": "2.25.0",
    "async": "0.2.9"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": {
    "node": ">=0.6"
  },
  "devDependencies": {
    "express": "3.3.4",
    "proxyquire": "0.4.1",
    "whiskey": "git://github.com/cloudkick/whiskey.git#58fc2944ac",
    "cli-color": "0.2.2",
    "nock": "0.22.1"
  },
  "readme": "fh-webapp is part one of a two-part replacement for fh-nodeapp. Webapp is the \"'\"hostapp\" part of fh-nodeapp, that which makes public endpoints from exported functions in cloud/main.js.\nIt also hosts some system-level piping to help the studio determine if an app is online, the endpoints it exposes), and introduces a new namespace - /mbaas.\n\n#Usage\nAdd the following to the 'dependencies' section of your **'cloud/package.json'** file:\n\n    \"fh-webapp\" : \"*\",\n    \"fh-api\" : \"*\",\n    \"express\" : \"3.3.4\"\nAdd a file to your FeedHenry app **'cloud/application.js'**, with the following contents:\n\n    var webapp = require('fh-webapp');\n    var express = require('express');\n    $fh = require('fh-api');\n    var mainjs = require('main.js');\n\n    var app = express();\n    app.use('/sys', webapp.sys(mainjs));\n    app.use('/mbaas', webapp.mbaas);\n    app.use('/cloud', webapp.cloud(mainjs));\n\n    // You can define custom URL handlers here, like this one:\n    app.use('/', function(req, res){\n      res.end('Your Cloud App is Running');\n    });\n\n    module.exports = app.listen(process.env.FH_PORT || process.env.VCAP_APP_PORT || 8001);\n\n##Customising & Extending\nThe above application.js is just an [Expressjs application](http://expressjs.com/api.html) - it's easily extensible. \n###Custom APIs\nYou can create custom API handlers in the Express format by doing:\n\n    app.use('/myapi', function(req, res){\n      res.end('My custom response');\n    });\n###Serving Static Files\nExpress has a built-in static file server. In this example, we host files under the public directory:  \n    \n    app.use(express.static(__dirname + '/public'));\n\n\n#REST API\t\n\n\n##Cloud\n\n###(POST | GET | PUT) /cloud/:someFunction\n**Authentication** : Optional - can be enabled globally or on a per-endpoint basis under \"Endpoints\" section of the studio.\n**Response formats** : JSON, binary, plain text\n\n###Headers\n**x-fh-auth-app** : API key of your application, found under the \"details\" section of the studio.\n\n###Body:\nJSON format - paramaters to be passed to the exported function, see 'Writing API Functions'.\n###Response:\nResult as passed to the callback function of the exported function - see 'Writing API Functions'.\n\n\n###Writing API functions\nThe cloud namespace exposes the public functions of a javascript file of your choice (traditionally 'main.js') as public endpoints under the cloud URL namespace.\n**:someFunction** is the name of a function attached to the 'exports' object. These functions take two paramaters - the first is the data sent in the POST, the second is the callback function to call.\n\n    exports.getConfig = function (params, callback){\n      // Do some work here, then return data\n      var err = false;\n\n      // Check if some error condition happened first\n      if (err){\n        return callback(err);\n      }\n      return callback(null, res);\n    }\n##mBaaS\n###POST /mbaas/db\n**Authentication** : Required - App API key goes here.\n**Response format** : JSON\n\n###Headers\n**x-fh-auth-app** : API key of your application, found under the \"details\" section of the studio.\n\n###POST Body:\nJSON body - same as $fh.db params. A summary of body options follows - For more, see [$fh.db docs](http://docs.feedhenry.com/v2/api_cloud_apis.html#$fh.db)\n\n    {\n        \"act\": \"create|update|list|delete|deleteall\",\n        \"type\": \"collectionName\",\n        \"guid\": \"GUID of object operating on - not required for list or deleteall\",\n        \"fields\": \"JSON definition of fields - required for create|update\",\n        \"eq|ne|in\" : \"JSON definition of query to match - supported for list only\"\n    }\n\n###Response:\nAs per [$fh.db](http://docs.feedhenry.com/v2/api_cloud_apis.html#$fh.db)\n\n##Sys\n##GET /sys/info/ping\n**Authentication** : None\n**Response formats** : Plaintext\n\n###Headers\nNone\n\n###Response:\n    \"OK\"\nif application is running as expected. Will respond with a 404 otherwise\n\n##GET /sys/info/endpoints\n**Authentication** : None\n**Response formats** : JSON\n\n###Headers\nNone\n\n###Response:\n    {\n      endpoints : ['array of endpoints exported as public functions']\n    }\n\n##GET /sys/info/memory\n**Authentication** : None\n**Response formats** : JSON\n\n###Headers\nNone\n\n###Response:\n    {\n      rss: 13721600, // Resident set size\n      heapTotal: 7195904, // V8's total available memory\n      heapUsed: 2369744  // V8's used memory\n    }\n\n##GET /sys/info/memory\n**Authentication** : None\n**Response formats** : Plaintext\n\n###Headers\nNone\n\n###Response:\n    0.1.0\n",
  "readmeFilename": "README.md",
  "_id": "fh-webapp@0.6.7",
  "dist": {
    "shasum": "bdd8fb44b9657884bbc45907eeddcc6c7b581728"
  },
  "_from": "fh-webapp@*",
  "_resolved": "https://registry.npmjs.org/fh-webapp/-/fh-webapp-0.6.7.tgz"
}
